
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true
spring.datasource.url=jdbc:postgresql://localhost:5332/Banking
spring.datasource.username=user-name
spring.datasource.password=strong-password


spring.datasource.initialization-mode=always
spring.datasource.initialize=true
spring.datasource.schema=classpath:/schema.sql
spring.datasource.continue-on-error=true
spring.application.name=springkafaktst
spring.kafka.bootstrap-servers=localhost:9092

spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id:myGroup
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer:org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer:org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer:org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-deserializer:org.springframework.kafka.support.serializer.JsonSerializer
